default:
  image: debian:stable

variables:
  UBOOT_RELEASE: 'v2020.01'
  GPG_USER: 'support@olimex.com'

stages:
  - test
  - package
  - deploy

.install_common_packages: &install_common_packages
  - apt-get update
  - apt-get install -y --no-install-recommends bc bison build-essential device-tree-compiler flex gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf libfdt-dev libpython3-dev python3 python3-distutils swig quilt

.install_debian_packages: &install_debian_packages
  - apt-get update
  - apt-get install -y --no-install-recommends debhelper-compat devscripts git git-buildpackage gnupg2

.import_gpg_key: &import_gpg_key
  - gpg --no-tty --batch --yes --import $SIGN_KEY
  - echo "" | gpg2 --pinentry-mode loopback --passphrase $GPG_PASS --sign -u $GPG_USER > /dev/null

.test_common: &test_common
  artifacts:
    name: "test-$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - u-boot-sunxi-with-spl.bin
    when: on_success
  except:
    - tags
    - /^master/
  only:
    - branches
  stage: test

.package_common: &package_common
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA"
    paths:
      - $CI_JOB_NAME/*
    when: on_success
  except:
    - /^master/
  only:
    - branches
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - rm -vf ../u-boot-olinuxino_*.* || true
    - gbp buildpackage --git-upstream-tree=$UBOOT_RELEASE --git-debian-branch="$CI_BUILD_REF_NAME" --git-builder='DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I'
    - mkdir $CI_JOB_NAME && cp -vf ../u-boot-olinuxino_*.* ./$CI_JOB_NAME/
  stage: package

.package_common_signed: &package_common_signed
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA"
    paths:
      - $CI_JOB_NAME/*
    when: on_success
  only:
    - tags
    - /^debian/
    - /^master/
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - gbp buildpackage --git-upstream-tree=$UBOOT_RELEASE --git-debian-branch="$CI_BUILD_REF_NAME" --git-builder='DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean -a$ARCH -i -I'
    - mkdir $CI_JOB_NAME && cp -vf ../u-boot-olinuxino_*.* ./$CI_JOB_NAME/
  stage: package

test:a20-olinuxino:
  before_script:
    - *install_common_packages
  script:
    - QUILT_PATCHES=debian/patches quilt push -a
    - make distclean && make A20-OLinuXino_defconfig && make CROSS_COMPILE=arm-linux-gnueabihf- -j$(nproc)
  <<: *test_common

test:a64-olinuxino:
  before_script:
    - dpkg --add-architecture arm64
    - *install_common_packages
    - apt-get install -y arm-trusted-firmware
  script:
    - QUILT_PATCHES=debian/patches quilt push -a
    - make distclean && make A64-OLinuXino_defconfig && make BL31=/usr/lib/arm-trusted-firmware/sun50i_a64/bl31.bin CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
  <<: *test_common

package:armhf:
  variables:
    ARCH: armhf
  before_script:
    - dpkg --add-architecture $ARCH
    - *install_common_packages
    - *install_debian_packages
    - apt-get install -y --no-install-recommends lzop:armhf
  <<: *package_common

package:arm64:
  variables:
    ARCH: arm64
  before_script:
    - dpkg --add-architecture $ARCH
    - *install_common_packages
    - *install_debian_packages
  <<: *package_common

package:signed:armhf:
  variables:
    ARCH: armhf
  before_script:
    - dpkg --add-architecture $ARCH
    - *install_common_packages
    - *install_debian_packages
    - apt-get install -y --no-install-recommends lzop:armhf
    - *import_gpg_key
  <<: *package_common_signed

package:signed:arm64:
  variables:
    ARCH: arm64
  before_script:
    - dpkg --add-architecture $ARCH
    - *install_common_packages
    - *install_debian_packages
    - *import_gpg_key
  <<: *package_common_signed

deploy:
  except:
    - branches
  only:
   - /^debian/
  stage: deploy
  script:
    - echo "Not implemented yet"
    - dpkg -I ../u-boot-olinuxino_*.deb
  when: manual
