default:
  image: debian:sid

stages:
  - test
  - package
  - deploy

.common_packages: &common_packages
  - apt-get update
  - apt-get install -y --no-install-recommends bc bison build-essential device-tree-compiler flex gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf libfdt-dev libpython3-dev python3 python3-distutils swig quilt

test:
  before_script:
    - *common_packages
  only:
    - branches
  except:
    - tags
    - /^master/
  stage: test
  script:
    - QUILT_PATCHES=debian/patches quilt push -a
    - make distclean && make A64-OLinuXino_defconfig && make CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
    - make distclean && make A20-OLinuXino_defconfig && make CROSS_COMPILE=arm-linux-gnueabihf- -j$(nproc)

package:arm64:
  artifacts:
    paths:
      - output/*
    when: on_success
  before_script:
    - dpkg --add-architecture arm64
    - dpkg --add-architecture armhf
    - *common_packages
    - apt-get install -y --no-install-recommends debhelper-compat devscripts git git-buildpackage gnupg2
    # Import the GPG private key and unlock the keyring
    - gpg --no-tty --batch --yes --import $SIGN_KEY
    - echo "" | gpg2 --pinentry-mode loopback --passphrase $GPG_PASS --sign -u support@olimex.com > /dev/null
  except:
    - branches
  only:
    - /^debian/
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/v2020.01:refs/tags/v2020.01
    - gbp buildpackage --git-upstream-tree=v2020.01 --git-debian-branch="$CI_BUILD_REF_NAME" --git-builder='DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean -aarm64 -pgpg2 -i -I'
    - mkdir output && cp -vf ../u-boot-olinuxino_*.* ./output/
  stage: package

deploy:
  except:
    - branches
  only:
   - /^debian/
  stage: deploy
  script:
    - dpkg -I ../u-boot-olinuxino_*.deb
