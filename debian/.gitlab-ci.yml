default:
  image: olimex/u-boot-olinuxino

variables:
  UBOOT_RELEASE: 'v2020.01'

stages:
  - test
  - source
  - binary
  - merge
  - deploy

.test_common: &test_common
  only:
    - branches
  script:
    - QUILT_PATCHES=debian/patches quilt push -a
    - make distclean && make $DEFCONFIG && make CROSS_COMPILE=$CROSS_COMPILE -j$(nproc)
  stage: test

test:a20-olinuxino:
  variables:
    CROSS_COMPILE: arm-linux-gnueabihf-
    DEFCONFIG: A20-OLinuXino_defconfig
  <<: *test_common

test:a64-olinuxino:
  variables:
    CROSS_COMPILE: aarch64-linux-gnu-
    DEFCONFIG: A64-OLinuXino_defconfig
  <<: *test_common

package:source:
  before_script:
    - rm -vf ../u-boot-*olinuxino_* || true
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - gbp export-orig --upstream-tree=$UBOOT_RELEASE
  script:
    - dpkg-buildpackage --post-clean -S -i -I
  stage: source

package:armhf:
  variables:
    ARCH: armhf
  before_script:
    - dpkg --add-architecture $ARCH
    - apt-get update && apt-get install -y --no-install-recommends lzop:armhf libc6:armhf
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
  needs:
    - "package:source"
  script:
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
  stage: binary

package:arm64:
  variables:
    ARCH: arm64
  before_script:
    - dpkg --add-architecture $ARCH
    - apt-get update && apt-get install -y --no-install-recommends libc6:arm64
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
  needs:
    - "package:source"
  script:
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
  stage: binary

package:merge:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*
  script:
    - mkdir $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA && mv -v ../u-boot-*olinuxino_*.* $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/
    - mergechanges -f $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*.changes
  stage: merge

deploy:staging:
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: manual
  script:
    - reprepro -b /var/www/html/staging include sid $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
  stage: deploy
  tags:
    - deploy

deploy:repository:
  before_script:
    - gpg --no-tty --batch --yes --import $SIGN_KEY
    - echo "" | gpg2 --pinentry-mode loopback --passphrase $GPG_PASS --sign -u $GPG_USER > /dev/null
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: manual
  script:
    - debsign $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
    - reprepro -b /var/www/html/staging include sid $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*_multi.changes
  stage: deploy
  tags:
    - deploy
