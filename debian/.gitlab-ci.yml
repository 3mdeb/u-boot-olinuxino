default:
  image: olimex/u-boot-olinuxino

variables:
  UBOOT_RELEASE: 'v2020.01'

stages:
  - test
  - source
  - binary
  - deploy

.test_common: &test_common
  only:
    - branches
  script:
    - QUILT_PATCHES=debian/patches quilt push -a
    - make distclean && make $DEFCONFIG && make CROSS_COMPILE=$CROSS_COMPILE -j$(nproc)
  stage: test

test:a20-olinuxino:
  variables:
    CROSS_COMPILE: arm-linux-gnueabihf-
    DEFCONFIG: A20-OLinuXino_defconfig
  <<: *test_common

test:a64-olinuxino:
  variables:
    CROSS_COMPILE: aarch64-linux-gnu-
    DEFCONFIG: A64-OLinuXino_defconfig
  <<: *test_common

package:source:
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - gbp export-orig --upstream-tree=v2020.01
    - dpkg-buildpackage --post-clean -S -i -I
  stage: source

package:armhf:
  variables:
    ARCH: armhf
  before_script:
    - dpkg --add-architecture $ARCH
    - apt-get update && apt-get install -y --no-install-recommends lzop:armhf
  needs:
    - "package:source"
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
  stage: binary

package:arm64:
  variables:
    ARCH: arm64
  before_script:
    - dpkg --add-architecture $ARCH
  needs:
    - "package:source"
  script:
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - git fetch origin +refs/tags/$UBOOT_RELEASE:refs/tags/$UBOOT_RELEASE
    - DEB_BUILD_OPTIONS=parallel=$(nproc) dpkg-buildpackage --post-clean --no-sign -a$ARCH -i -I -b
  stage: binary

deploy:
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA/*"
  before_script:
    - gpg --no-tty --batch --yes --import $SIGN_KEY
    - echo "" | gpg2 --pinentry-mode loopback --passphrase $GPG_PASS --sign -u $GPG_USER > /dev/null
  script:
    - mergechanges -f ../*.changes
    - debsign ../*_multi.changes
    - mkdir "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA" && cp -v ../u-boot-olinuxino_*.* "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
  stage: deploy
